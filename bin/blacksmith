#!/usr/bin/env node

var argv = require("optimist").argv,
    path = require("path"),
    fs = require("fs"),
    prompt = require("prompt"),
    smith = require("../lib/blacksmith");
require("colors");

var task = argv._[0],
    dir = (argv.length - 1) ? (argv._[argv._.length - 1]) : ".";

switch (task) {
  case "generate":
    console.log("GENERATING YOUR FILES".yellow);
    smith.generate(dir+"/pages", dir+"/public");
    break;

  case "init":
    prompt.start();
    prompt.get([ "title", "author" ], function (err, res) {
      if (err) {
        throw err;
      }

      //TODO: Check authors

      fs.writeFile("page.json", JSON.stringify({
        title: res.title,
        author: res.author,
        date: new Date()
      }), function (err) {
        if (err) {
          throw err;
        }
        console.log(" - Created `page.json`.".green);

        fs.writeFile("content.md", "Dear diary,\n\n\n", function (err) {
          if (err) {
            throw err;
          }
          console.log(" - Created `content.md`.".green);

          console.log("Done.\n");

        });
      });

    });
    break;

  case "serve":

    console.log("SERVING YOUR FILES".yellow);

    var HTTPServer = require('http-server').HTTPServer;
    var httpServer = new HTTPServer({root: dir+'/public/'});

    httpServer.start();

    process.on('SIGINT', function() {
      httpServer.log('http-server stopped.'.red);
      return process.exit();
    });

    break;
  default:
    console.log("Invalid instructions!".red);
    console.log();
    console.log("You may either:");
    console.log();
    console.log("* blacksmith generate <folder>");
    console.log("* blacksmith serve <folder>");
    console.log();
}
